@using SignalR.Models
@using Microsoft.AspNet.Identity;
@model HomeIndexViewModel
@{
    ViewBag.Title = "Home Page";
    var userName = User.Identity.Name;
    var userId = User.Identity.GetUserId();
}
@section Stylesheet{
<style>
        .wraper {
            background-color: antiquewhite;
            width: 100%;
            height: 100%;
            margin-top: 10px;
        }

        .users {
            height: 100%;
            padding: 0;
        }

        .header {
            height: 50px;
            background-color: #dec6c6;
            display: flex;
            justify-content: center;
            align-items: center;
            /*padding-right: 10px;*/
        }

        .list-user {
            height: 100%;
            padding: 10px;
            border-right: 1px solid #72dcd247;
        }
        .list-group {
            height: 100%;
            padding: 10px;
        }

        .user,.group {
            cursor: pointer;
        }

        .status {
            height: 10px;
            width: 10px;
            background-color: #757b75;
            display: inline-block;
        }

        .title {
            text-transform: uppercase;
            font-weight: 700;
            font-size: 16px;
            /*text-align:center;*/
        }

        .conversation {
            height: 100%;
            background-color: #d6efeb;
            padding: 0;
        }

        .nav-tabs {
            height: 50px;
            background-color: #e8b2b2;
            display: flex;
            align-items: center;
            padding-left: 5px;
        }

        .tab-content {
            margin: 10px;
            height: calc(100% - 70px);
        }
        .divContent{
            position:relative;
        }
        .group-name {
        }

        .participants {
            height: 30px;
        }

        .conversation-body {
            height: calc(100% - 30px);
        }
        .chat-area {
             height: 60px;
        }
        .messages-area {
            height: calc(100% - 60px);
            overflow: auto;
        }
        .delete-tab {
            position: absolute;
            top: -2px;
            right: 7px;
            padding: 2px;
            color: #b54242;
            cursor: pointer;
        }
        @@keyframes new-message {
            from {
                color: red;
            }

            to {
                color: yellow;
            }
        }
        .new-message {
            position: absolute;
            top: -2px;
            left: 50%;
            transform: translateX(-50%);
            animation: new-message 1s infinite;
            
        }
        .liTab {
            position: relative;
        }
        textarea {
            width: 100%;
            height: 100%;
            resize: none;
            padding: 5px;
            max-width: 100% !important;
        }
        .modal-dialog {
            margin-top: 200px;
            width: 350px;
        }
        .modal-title{
            text-align:center;
        }
        #add-par{
            position:absolute;
        }
        .users-groups {
            height: calc(100% - 50px);
        }
</style>
}
<div class="wraper">
    <div class="col-md-4 users">
        <div class="header">            
            <button class="btn btn-success" id="create-group" >Tạo nhóm chat</button>
        </div>
        <div class="users-groups">
            <div class="list-user col-md-6 col-sm-12">
                <p class="title">Thành viên</p>
                <ul style="list-style-type:none;padding-left: 5px;">
                    @foreach (var item in Model.UserModels)
                    {
                        <li class="user" data-id="@item.UserId">
                            <span class="status"></span>
                            <span class="user-name">@item.UserName</span>
                        </li>
                    }
                </ul>
            </div>
            <div class="list-group col-md-6 col-sm-12">
                <p class="title">Nhóm</p>
                <ul style="list-style-type:none; padding-left: 5px;">
                    @foreach (var item in Model.GroupModels)
                    {
                        <li class="group" data-id="@item.Id">
                            <span class="group-name">@item.Name</span>
                        </li>
                    }
                </ul>
            </div>
        </div>
        
    </div>
    <div class="col-md-8 conversation">
        <ul class="nav nav-tabs">
            @*<li class="active"><a data-toggle="tab" href="#home">Home</a></li>*@
        </ul>
        <div class="tab-content">

        </div>
    </div>

    <!-- Modal -->
    <div id="myModal" class="modal fade" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Tên nhóm:</h4>
                </div>
                <div class="modal-body">
                    <input type="text" name="name" value="" placeholder="Tên nhóm" class="form-control"/>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-success" id="create-confirm">Tạo</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Đóng</button>
                </div>
            </div>

        </div>
    </div>

</div>
@section scripts{
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script src="~/Scripts/jquery.signalR-2.3.0.min.js"></script>
    <script src="~/signalr/hubs"></script>
    <script>
        $(function () {
            var userName =@Html.Raw(Json.Encode(userName));
            var userId=@Html.Raw(Json.Encode(userId));
            var groupChatHub = $.connection.groupChatHub;
            groupChatHub.client.getOnlineUsers = function (userIds) {
                $('li.user .status').css("background-color", "#757b75");
                userIds.forEach((item, index) => {
                    $(`li.user[data-id=${item}] .status`).css("background-color", "green");
                });
            };
            groupChatHub.client.getMessage = function (model) {
                var isHaveTab = $(`.divContent[data-con=${model.ConversationId}]`).length > 0;
                if (isHaveTab) {
                    var html = `<p><b>${model.SentUserName}: </b><span>${model.Content}</span></p>`;
                    $(`.divContent[data-con=${model.ConversationId}] .messages-area`).append(html);
                    if (!$(`.liTab[data-con=${model.ConversationId}]`).hasClass("active")) {
                        $(`.liTab[data-con=${model.ConversationId}] .new-message`).removeClass("hidden");
                    }
                    //$(`.liTab[data-con=${model.ConversationId}]`)
                }
                else {
                    if ($(`.divContent[data-id=${model.SentUserId}]`).length > 0) {
                        $(`.divContent[data-id=${model.SentUserId}]`).attr("data-con", `${model.ConversationId}`);
                        $(`.divContent[data-id=${model.SentUserId}]`).attr("id", `${model.ConversationId}`);
                        $(`.liTab[data-id=${model.SentUserId}] a`).attr("href", `#${model.ConversationId}`);
                        $(`.liTab[data-id=${model.SentUserId}]`).attr("data-con", model.ConversationId);
                    }
                    else {
                        var userNamePar = model.SentUserName;
                        var liTab = `<li class="liTab" data-con=${model.ConversationId} data-id=${model.SentUserId}><a data-toggle="tab" href="#${model.ConversationId}">${userNamePar}</a><span class="new-message hidden">new</span><span class="delete-tab">x</span></li>`;
                        var divContent = `<div id="${model.ConversationId}" data-con=${model.ConversationId} data-id=${model.SentUserId} class="tab-pane fade divContent" style="height: 100%;">
                        <div class="participants">
                            <b>Thành viên:</b> ${userName}, ${userNamePar}
                        </div>
                        <div class="conversation-body">
                            <div class="messages-area"></div>
                            <div class="chat-area">
                                <textarea>
                                </textarea>
                            </div>
                        </div>
                    </div>`;
                        $(".nav-tabs").append(liTab);
                        $(".tab-content").append(divContent);
                        $(`.liTab[data-id=${model.SentUserId}] a`).tab('show');
                        $.ajax({
                            type: "Get",
                            url: '@Url.Action("GetOldMessagesByConversationId", "api/GroupChat")' + `?conId=${model.ConversationId}`,
                            success: function (result) {
                                if (result == "error") {
                                }
                                else {
                                    var conversationId = model.ConversationId;
                                    var html = "";
                                    if (result != false) {
                                        result.Messages.forEach((item, index) => {
                                            if (item.SentUserId == userId) {
                                                html = html + `<p><b style="color: #433bb9;">${item.SentUserName}: </b><span>${item.Content}</span></p>`;
                                            }
                                            else {
                                                html = html + `<p><b>${item.SentUserName}: </b><span>${item.Content}</span></p>`;
                                            }
                                        });
                                    }
                                    //html = html + `<p><b>${model.SentUserName}: </b><span>${model.Content}</span></p>`;
                                    $(`.divContent[data-con=${model.ConversationId}] .messages-area`).append(html);
                                    $(`#${model.SentUserId} textarea`).focus();
                                }

                            },
                            error: function (jqXHR, textStatus, errorThrown) {
                                debugger;
                                return;
                            }
                        });
                    }
                }
            };

            var startHub = $.connection.hub.start()
                .done(function () {
                    $("li.user").on("dblclick", (e) => {
                        var userIdPar = $(e.currentTarget).data("id");
                        if (userId == userIdPar) {
                            return;
                        }
                        if ($(`.liTab[data-id=${userIdPar}]`).length == 0) {
                            var conName = `${userId}_${userIdPar}`;
                            $.ajax({
                                type: "Get",
                                url: '@Url.Action("CheckExistConversation", "api/GroupChat")' + `?conName=${conName}`,
                                success: function (result) {
                                    debugger;
                                    if (result == "error") {
                                        return;
                                    }
                                    else {
                                        var conversationId = "";
                                        if (result == false) {
                                            conversationId = createGuid();
                                        }
                                        else {
                                            conversationId = result.ConversationId
                                        }
                                        var userNamePar = $(e.currentTarget).children(".user-name").text();
                                        var liTab = `<li class="liTab" data-con=${conversationId} data-id=${userIdPar}><a data-toggle="tab" href="#${conversationId}">${userNamePar}</a><span class="new-message hidden">new</span><span class="delete-tab">x</span></li>`;
                                        var divContent = `<div id="${conversationId}" data-con=${conversationId} data-id=${userIdPar} class="tab-pane fade divContent" style="height: 100%;">
                                                        <div class="participants">
                                                            <b>Thành viên:</b> ${userName}, ${userNamePar}
                                                        </div>
                                                        <div class="conversation-body">
                                                            <div class="messages-area"></div>
                                                            <div class="chat-area">
                                                                <textarea class="form-control">
                                                                </textarea>
                                                            </div>
                                                        </div>
                                                    </div>`;
                                        $(".nav-tabs").append(liTab);
                                        $(".tab-content").append(divContent);
                                        $(`.liTab[data-con=${conversationId}] a`).tab('show');
                                        $(`.divContent#${conversationId} textarea`).focus();
                                        if (result != false) {
                                            var html = "";
                                            result.Messages.forEach((item, index) => {
                                                if (item.SentUserId == userId) {
                                                    html = html + `<p><b style="color: #433bb9;">${item.SentUserName}: </b><span>${item.Content}</span></p>`;
                                                }
                                                else {
                                                    html = html + `<p><b>${item.SentUserName}: </b><span>${item.Content}</span></p>`;
                                                }
                                            });

                                            let messagesAreaElement = $(`.divContent[data-con=${result.ConversationId}] .messages-area`);
                                            messagesAreaElement.append(html);
                                            messagesAreaElement.animate({ scrollTop: messagesAreaElement.height() }, 1000);
                                        }

                                    }
                                },
                                error: function (jqXHR, textStatus, errorThrown) {
                                    debugger;
                                    return;
                                }
                            });
                    }
                    else {
                            $(`.liTab[data-id=${userIdPar}] a`).tab('show');
                    }
                    });

                    $("#create-group").click((e) => {
                        $("#myModal").modal();

                    });

                    $("#create-confirm").click((e) => {
                        let name = $(".modal-dialog input").val();
                        $("#myModal").modal("hide");
                        $.ajax({
                            type: "Get",
                            url: '@Url.Action("CreateGroup", "api/GroupChat")' + `?name=${name}`,
                            success: function (result) {
                                debugger
                                if (result == "error") {
                                    return;
                                }
                                var liTab = `<li class="liTab" data-con=${result}><a data-toggle="tab" href="#${result}">${name}</a><span class="new-message hidden">new</span><span class="delete-tab">x</span></li>`;
                                var divContent = `<div id="${result}" data-con=${result} class="tab-pane fade divContent" style="height: 100%;">
                                                        <button id="add-par">Thêm mới</button>
                                                        <div class="participants">
                                                           <b>Thành viên:</b>
                                                        </div>
                                                        <div class="conversation-body">
                                                            <div class="messages-area"></div>
                                                            <div class="chat-area">
                                                                <textarea class="form-control">
                                                                </textarea>
                                                            </div>
                                                        </div>
                                                    </div>`;
                                $(".nav-tabs").append(liTab);
                                $(".tab-content").append(divContent);
                                $(`.liTab[data-con=${result}] a`).tab('show');
                                $(`.divContent#${result} textarea`).focus();
                                let groupElement = `<li class="group" data-id="${result}">
                                                    <span class="group-name">${name}</span>
                                                </li>`;
                                $(".list-group ul").prepend(groupElement);
                            },
                            error: function (jqXHR, textStatus, errorThrown) {                                
                                return;
                            }
                        });                        
                    });

                    $(document).on("click", ".liTab", (e) => {
                        var target = $(e.currentTarget);
                        target.children(".new-message").addClass("hidden");
                    })

                    $(document).on("click", ".delete-tab", (e) => {
                        var target = $(e.currentTarget);
                        var id = target.closest("li").data("con");
                        target.closest("li").remove();
                        $(`div#${id}`).remove();
                    });

                    $(document).on("keyup", "textarea", (e) => {
                        if (e.keyCode === 13) {
                            e.preventDefault;
                            var message = $(e.currentTarget).val();
                            var userIdPar = $(e.currentTarget).closest(".divContent").data("id");
                            var conId = $(e.currentTarget).closest(".divContent").data("con");
                            var html = `<p><b style="color: #433bb9;">${userName}: </b><span>${message}</span></p>`;
                            let messagesAreaElement = $(e.currentTarget).closest(".conversation-body").children(".messages-area");
                            messagesAreaElement.append(html);
                            messagesAreaElement.animate({ scrollTop: messagesAreaElement.height() }, 1000);
                            $(e.currentTarget).val("");
                            groupChatHub.server.sendMessage(userIdPar, message, conId);
                        }
                    });
                })
                .fail(() => {
                    console.log('Could not connect');
                    setTimeout(startHub, 5000);
                });

            var createGuid = function uuidv4() {
                return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
                    var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);
                    return v.toString(16);
                });
            }
        });
    </script>

}